name: Deploy Pages

on:
  workflow_run:
    workflows: ["Rust CI"]
    types: [completed]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: deploy-pages-${{ github.event.workflow_run.head_branch }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy rustfmt
      - run: cargo test -p avatars-core
      - run: |
          mkdir -p public/avatars
          cp -r avatars/* public/avatars/
          cp AGENTS.md INSTRUCTIONS.md README.md public/
          cp init-container.sh init-ephemeral-container.sh pre-task.sh public/
          mkdir -p public/scripts/lib
          cp scripts/bootstrap-cached-container.sh \
             scripts/bootstrap-ephemeral-container.sh \
             scripts/refresh-cached-container.sh \
             public/scripts/
          cp scripts/lib/container-bootstrap-common.sh public/scripts/lib/
          mkdir -p public/workflows
          cp .github/workflows/codex-cleanup.yml public/workflows/
          cp avatars/catalog.json public/index.json
          cp avatars/catalog.json public/avatars.json
          {
            cat AGENTS.md
            echo
            echo "## Avatars"
            for f in avatars/*.md; do
              name=$(basename "$f")
              echo "- [${name%.*}](avatars/$name)"
            done
            echo
            cat INSTRUCTIONS.md
          } > public/index.md
          touch public/.nojekyll
      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/deploy-pages@v4
        id: deployment

  verify-pages:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Smoke test published endpoints
        run: |
          set -euo pipefail
          base_url="https://qqrm.github.io/codex-tools"
          paths=(
            "index.json"
            "avatars.json"
            "AGENTS.md"
            "INSTRUCTIONS.md"
            "README.md"
            "workflows/codex-cleanup.yml"
            "init-container.sh"
            "init-ephemeral-container.sh"
            "pre-task.sh"
            "scripts/bootstrap-cached-container.sh"
            "scripts/bootstrap-ephemeral-container.sh"
            "scripts/refresh-cached-container.sh"
            "scripts/lib/container-bootstrap-common.sh"
          )
          sleep 10
          for path in "${paths[@]}"; do
            echo "Validating ${base_url}/${path}"
            for attempt in $(seq 1 5); do
              if curl --fail --silent --show-error "${base_url}/${path}" > /dev/null; then
                echo "  OK on attempt ${attempt}"
                break
              fi
              if [[ $attempt -eq 5 ]]; then
                echo "  Failed after ${attempt} attempts" >&2
                exit 1
              fi
              sleep 5
            done
          done
